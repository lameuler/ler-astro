---
interface Props {
    scale?: boolean
}
const { scale } = Astro.props
---

<div class={ scale ? 'scale' : '' }>
    <button id="theme-switch-light" aria-label="Switch to dark theme">
        { Astro.slots.has('light') ? <slot name="light"/> : <svg class="icon" viewBox="0 0 24 24">
            <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0" />
            <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7" />
        </svg> }
    </button>
    <button id="theme-switch-dark" aria-label="Switch to light theme">
        { Astro.slots.has('dark') ? <slot name="dark"/> : <svg class="icon" viewBox="0 0 24 24">
            <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z" />
            <path d="M17 4a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2" />
            <path d="M19 11h2m-1 -1v2" />
        </svg> }
    </button>
</div>

<style>
    svg {
        height: 1.5rem;
        width: 1.5rem;
        margin: 0.25rem;
        opacity: 0.6;
    }
    div:hover svg {
        opacity: 0.8;
    }
    div:active svg {
        opacity: 0.9;
    }
    div.scale button {
        transition: scale 150ms ease-out;
    }
    div.scale:hover button {
        scale: 110%;
    }
    div.scale:active button {
        scale: 100%;
    }
    #theme-switch-light,
    :global(.dark) #theme-switch-dark {
        display: block;
    }
    :global(.dark) #theme-switch-light,
    #theme-switch-dark {
        display: none;
    }
</style>

<script>
    const update = (dark: boolean) => {
        if (dark) document.documentElement.classList.add('dark')
        else document.documentElement.classList.remove('dark')
        localStorage.setItem('appearance:dark', dark+':'+mediaDark.matches)
    }

    let mediaDark = matchMedia('(prefers-color-scheme: dark)')
    mediaDark.addEventListener('change', ()=>{
        update(mediaDark.matches)
    })
    window.addEventListener('storage', ()=>{
        const stored = (localStorage.getItem('appearance:dark') || '').split(':')
        if (stored[0] === 'true' || stored[0] === 'false') {
            update(stored[0] === 'true')
        } else {
            update(document.documentElement.classList.contains('dark'))
        }
    })
    
    document.getElementById('theme-switch-light')?.addEventListener('click', ()=>{
        update(true)
    })
    document.getElementById('theme-switch-dark')?.addEventListener('click', ()=>{
        update(false)
    })
</script>

<script is:inline id="theme-script">
    const system = matchMedia('(prefers-color-scheme: dark)').matches
    const stored = (localStorage.getItem('appearance:dark') || '').split(':')
    let dark = false
    if (stored[1] === system.toString() && (stored[0] === 'true' || stored[0] === 'false')) dark = stored[0] === 'true'
    else dark = system
    if (dark) document.documentElement.classList.add('dark')
    else document.documentElement.classList.remove('dark')

    document.getElementById('theme-script').remove() // cleanup :)
</script>